{"version":3,"sources":["Game/index.js","Game/Board.js","Game/History.js","Game/engine.js","SelectBot.js","App.js","bots.js","index.js"],"names":["BoardContainer","styled","div","_templateObject","Controls","_templateObject2","Action","button","_templateObject3","Game","state","isPlaying","fen","history","newGame","_this","setState","engine","hasBoardNotChanged","prevState","prevProps","props","white","black","onMovePiece","_","from","to","doMove","moved","_moved","Object","_Users_edd_Projects_chess_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","action","global","confirm","_Users_edd_Projects_chess_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","concat","onDragStart","_this$state","_this$props","togglePlay","_ref","this","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","className","_Board__WEBPACK_IMPORTED_MODULE_12__","onClick","_History__WEBPACK_IMPORTED_MODULE_13__","Component","_templateObject4","__webpack_exports__","_Users_edd_Projects_chess_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_chess__WEBPACK_IMPORTED_MODULE_2___default","assign","pieces","toPositions","react__WEBPACK_IMPORTED_MODULE_2___default","map","_ref2","piece","color","san","toUpperCase","join","isNewGame","isBlackTurn","split","isWhiteTurn","isCheck","Chess","in_check","isGameOver","game_over","isMoveable","moves","square","length","move","game","promotion","SQUARES","reduce","positions","position","get","type","_Users_edd_Projects_chess_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","toBot","bots","name","filter","option","Player","objectWithoutProperties","react_default","toLowerCase","replace","s","SelectBot","selected","undefined","onBotChange","e","target","value","player","onChange","key","Players","App_templateObject","App","handleBotChange","bot","defineProperty","src_SelectBot","App_templateObject2","stockFishWorker","file","stockfish","Worker","resolver","addEventListener","data","match","Promise","res","postMessage","stockFishJsWithDepth","depth","stockFishWasmWithDepth","BOTS","verbose","_moves$Math$floor","Math","floor","random","setTimeout","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.984e77c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Board from \"./Board\";\nimport History from \"./History\";\nimport * as engine from \"./engine\";\n\nconst BoardContainer = styled.div`\n  width: 500px;\n  float: left;\n`;\n\nconst Controls = styled.div`\n  width: 500px;\n  margin: 20px auto 0;\n  text-align: center;\n`;\n\nconst Action = styled.button`\n  margin-right: 10px;\n`;\n\nclass Game extends Component {\n  state = {\n    isPlaying: false,\n    fen: \"\",\n    history: []\n  };\n\n  componentDidMount() {\n    this.newGame();\n  }\n\n  newGame = () => {\n    this.setState({\n      isPlaying: false,\n      fen: engine.newGame(),\n      history: []\n    });\n  };\n\n  async componentDidUpdate(prevState, prevProps) {\n    const { fen, isPlaying } = this.state;\n    const { white, black } = this.props;\n\n    if (!isPlaying || this.hasBoardNotChanged(prevState, prevProps)) {\n      return;\n    }\n\n    if (white && (engine.isWhiteTurn(fen) || engine.isNewGame(fen))) {\n      const { from, to } = await white(fen);\n      if (white === this.props.white) {\n        this.doMove(from, to);\n      }\n    }\n\n    if (black && engine.isBlackTurn(fen)) {\n      const { from, to } = await black(fen);\n      if (black === this.props.black) {\n        this.doMove(from, to);\n      }\n    }\n  }\n\n  hasBoardNotChanged = (prevState, prevProps) =>\n    this.state.isPlaying === prevState.isPlaying &&\n    this.state.fen === prevState.fen &&\n    this.props.white === prevProps.white &&\n    this.props.black === prevProps.black;\n\n  onMovePiece = (_, from, to) => {\n    this.doMove(from, to);\n  };\n\n  doMove = (from, to) => {\n    const moved = engine.move(this.state.fen, from, to);\n    if (moved) {\n      const [fen, action] = moved;\n\n      if (engine.isGameOver(fen)) {\n        global.confirm(\"We have a winner!\");\n        this.newGame();\n        return;\n      }\n\n      this.setState({ fen, history: [...this.state.history, action] });\n    }\n  };\n\n  onDragStart = (_, from) => {\n    const { fen, isPlaying } = this.state;\n    const { white, black } = this.props;\n\n    return (\n      isPlaying &&\n      engine.isMoveable(fen, from) &&\n      ((!white && engine.isWhiteTurn(fen)) ||\n        (!black && engine.isBlackTurn(fen)))\n    );\n  };\n\n  togglePlay = () => {\n    this.setState(({ isPlaying }) => ({ isPlaying: !isPlaying }));\n  };\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <BoardContainer>\n          <Board\n            fen={this.state.fen}\n            onDragStart={this.onDragStart}\n            onMovePiece={this.onMovePiece}\n          />\n          <Controls>\n            <Action onClick={this.newGame}>New Game</Action>\n            <Action onClick={this.togglePlay}>\n              {this.state.isPlaying ? \"Pause\" : \"Play\"}\n            </Action>\n            {engine.isCheck(this.state.fen) && \"Check\"}\n          </Controls>\n        </BoardContainer>\n        <History history={this.state.history} />\n      </div>\n    );\n  }\n}\n\nexport default styled(Game)`\n  width: 700px;\n  margin: auto;\n`;\n","import React from \"react\";\nimport Board from \"react-chess\";\nimport { toPositions } from \"./engine\";\n\nexport default ({ fen, ...props }) => (\n  <Board pieces={toPositions(fen)} {...props} />\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default styled(({ history, ...props }) => (\n  <pre {...props}>\n    {history\n      .map(\n        ({ piece, color, from, san }) =>\n          `${color === \"w\" ? piece : piece.toUpperCase()}${from} ${san}`\n      )\n      .join(\"\\n\")}\n  </pre>\n))`\n  width: 180px;\n  height: 480px;\n  overflow: scroll;\n  float: left;\n  padding: 10px;\n  margin: 0;\n`;\n","import Chess from \"chess.js\";\n\nexport const newGame = () =>\n  \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\n\nexport const isNewGame = fen => fen === newGame();\n\nexport const isBlackTurn = fen => fen.split(\" \")[1] === \"b\";\n\nexport const isWhiteTurn = fen => fen.split(\" \")[1] === \"w\";\n\nexport const isCheck = fen => new Chess(fen).in_check();\n\nexport const isGameOver = fen => new Chess(fen).game_over();\n\nexport const isMoveable = (fen, from) =>\n  new Chess(fen).moves({ square: from }).length > 0;\n\nexport const move = (fen, from, to) => {\n  const game = new Chess(fen);\n  const action = game.move({ from, to, promotion: \"q\" });\n  return action && [game.fen(), action];\n};\n\nexport const toPositions = fen => {\n  const game = new Chess(fen);\n\n  return game.SQUARES.reduce((positions, position) => {\n    const piece = game.get(position);\n    if (!piece) return positions;\n    const type = piece.color === \"w\" ? piece.type.toUpperCase() : piece.type;\n    return [...positions, `${type}@${position}`];\n  }, []);\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport const toBot = (bots, name) => {\n  const { action } = bots.filter(option => option.name === name)[0];\n  return action && action();\n};\n\nvar toTitleCase = str =>\n  str.toLowerCase().replace(/\\b(\\w)/g, s => s.toUpperCase());\n\nconst Player = styled(({ name, ...props }) => (\n  <span {...props}>{toTitleCase(name)}</span>\n))`\n  margin-right: 10px;\n`;\n\nclass SelectBot extends Component {\n  state = {\n    selected: undefined\n  };\n\n  onBotChange = e => {\n    const name = e.target.value;\n    this.setState({ selected: name }, () => {\n      this.props.onBotChange(this.props.player, toBot(this.props.bots, name));\n    });\n  };\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <Player name={this.props.player} />\n        <select value={this.state.selected} onChange={this.onBotChange}>\n          {this.props.bots.map(({ name }) => (\n            <option key={name}>{name}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default styled(SelectBot)`\n  padding: 20px 0;\n  float: left;\n  margin-right: 20px;\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Game from \"./Game\";\nimport SelectBot from \"./SelectBot\";\n\nconst Players = styled.div`\n  margin: auto;\n  width: 500px;\n`;\n\nclass App extends Component {\n  state = {\n    white: undefined,\n    black: undefined\n  };\n\n  handleBotChange = (player, bot) => {\n    this.setState({ [player]: bot });\n  };\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <Players>\n          <SelectBot\n            bots={this.props.bots}\n            player=\"white\"\n            onBotChange={this.handleBotChange}\n          />\n          <SelectBot\n            bots={this.props.bots}\n            player=\"black\"\n            onBotChange={this.handleBotChange}\n          />\n        </Players>\n        <Game white={this.state.white} black={this.state.black} />\n      </div>\n    );\n  }\n}\n\nexport default styled(App)`\n  margin: auto;\n  padding: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n`;\n","import Chess from \"chess.js\";\n\nexport const randomMove = () => fen =>\n  new Promise(res => {\n    const moves = new Chess(fen).moves({ verbose: true });\n    const { from, to } = moves[Math.floor(Math.random() * moves.length)];\n    setTimeout(() => res({ from, to }), 500);\n  });\n\nconst stockFishWorker = (file, action) => () => {\n  const stockfish = new Worker(file);\n\n  let resolver = null;\n\n  stockfish.addEventListener(\"message\", e => {\n    const move = e.data.match(/^bestmove\\s([a-h][1-8])([a-h][1-8])/);\n    if (move && resolver) {\n      resolver({ from: move[1], to: move[2] });\n      resolver = null;\n    }\n  });\n\n  return fen =>\n    new Promise(res => {\n      resolver = res;\n      stockfish.postMessage(`position fen ${fen}`);\n      stockfish.postMessage(action);\n    });\n};\n\nexport const stockFishJsWithDepth = depth =>\n  stockFishWorker(\"stockfish.js\", `go depth ${depth}`);\n\nexport const stockFishWasmWithDepth = depth =>\n  stockFishWorker(\"stockfish.wasm.js\", `go depth ${depth}`);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as bots from \"./bots\";\n\nconst BOTS = [\n  { name: \"User\", action: undefined },\n  { name: \"Random\", action: bots.randomMove },\n  { name: \"Stockfish WASM (Depth 10)\", action: bots.stockFishJsWithDepth(10) },\n  { name: \"Stockfish WASM (Depth 20)\", action: bots.stockFishJsWithDepth(20) },\n  { name: \"Stockfish JS (Depth 10)\", action: bots.stockFishWasmWithDepth(10) },\n  { name: \"Stockfish JS (Depth 20)\", action: bots.stockFishWasmWithDepth(20) }\n];\n\nReactDOM.render(<App bots={BOTS} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}